// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ModuleGenerator class generate files 1`] = `
"import React from \"react\";
import {ReactUtil} from \"@pinnacle0/web-ui/util/ReactUtil\";
import \"./index.less\";

export const Main = ReactUtil.memo(\"Main\", () => {
    return <div />;
});
"
`;

exports[`ModuleGenerator class generate files 2`] = `
"import {useSelector} from \"core-fe\";
import type {RootState} from \"type/state\";

export function useNewFeatureState<T>(fn: (state: RootState[\"app\"][\"newFeature\"]) => T): T {
    return useSelector((state: RootState) => fn(state.app.newFeature));
}
"
`;

exports[`ModuleGenerator class generate files 3`] = `
"import {Module, register} from \"core-fe\";
import {Main} from \"./Main\";
import type {SagaGenerator} from \"core-fe\";
import type {RootState} from \"type/state\";
import type {State} from \"./type\";

const initialState: State = {};

class NewFeatureModule extends Module<RootState, \"newFeature\"> {
    override *onEnter(): SagaGenerator {
        // TODO
    }
}

const newFeatureModule = register(new NewFeatureModule(\"newFeature\", initialState));
export const actions = newFeatureModule.getActions();
export const MainComponent: React.ComponentType<object> = newFeatureModule.attachLifecycle(Main);
"
`;

exports[`ModuleGenerator class generate files 4`] = `
"export interface State {}
"
`;

exports[`ModuleGenerator class generate files 5`] = `
"import type {State} from \"core-fe\";
import type {State as NewFeatureState} from \"module/common/new-feature/type\";
import type {State as OldFeatureState} from \"./modules/common/old-feature\";

export interface RootState extends State {
    app: {
        oldFeature: OldFeatureState;
    newFeature: NewFeatureState;
};
}
"
`;

exports[`ModuleGenerator class generate files 6`] = `
"//
export interface State {}
"
`;
