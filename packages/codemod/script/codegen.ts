import {TaskRunner} from "@pinnacle0/devtool-util";
import j from "jscodeshift";
import fs from "fs-extra";
import path from "path";

const Paths = {
    modDirectory: path.join(__dirname, "../src/mod"),
    modTypes: path.join(__dirname, "../src/modType.ts"),
};

const ModeTypeComment = `
-----------------------------------------------------------------------------
                Attention: This file is generated by codegen
                          Do not modify by hand
-----------------------------------------------------------------------------
`;

new TaskRunner("codegen").execute([
    {
        name: "Add new codemod to modType.ts",
        execute: async () => {
            const fileOrDirectory = await fs.readdir(Paths.modDirectory);
            const mods = fileOrDirectory.map(_ => path.parse(_).name);
            const output = j.program.from({
                body: [
                    j.exportNamedDeclaration.from({
                        source: null,
                        declaration: j.typeAlias.from({
                            id: j.identifier("ModType"),
                            typeParameters: null,
                            right: j.unionTypeAnnotation.from({
                                types: mods.map(_ =>
                                    j.stringLiteralTypeAnnotation.from({
                                        value: _,
                                        raw: _,
                                    })
                                ),
                            }),
                        }),
                    }),
                ],
                comments: [j.commentBlock(ModeTypeComment)],
            });
            const source = j(output).toSource();
            await fs.writeFile(Paths.modTypes, source, {encoding: "utf8"});
        },
    },
]);
